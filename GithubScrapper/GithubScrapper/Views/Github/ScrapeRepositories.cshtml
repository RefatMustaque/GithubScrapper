@model GithubScrapper.Models.ViewModels.ScrapeRepositoriesViewModel

@{
    ViewData["Title"] = "Scrape Repositories";
}

<h1>@ViewData["Title"]</h1>

<form id="scrapeForm">
    <div class="form-group">
        <label for="owner">GitHub Repository Owner:</label>
        <input type="text" class="form-control" id="owner" name="owner" placeholder="Enter GitHub repository owner (e.g., 'RefatMustaque')" required />
    </div>

    <div class="form-group">
        <label for="repoName">GitHub Repository Name:</label>
        <input type="text" class="form-control" id="repoName" name="repoName" placeholder="Enter GitHub repository name (e.g., 'AIUB-Student-Help-Desk')" required />
    </div>

    <div class="form-group">
        <label for="fileExtension">Select File Types:</label>
        <br />
        <button type="button" id="selectAll" class="btn btn-primary mb-3">Select / Unselect All</button>
        <div id="fileExtension" class="row">
            @foreach (var ext in Model.ValidExtensions)
            {
                <div class="col-sm-3">
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="ext_@ext" name="fileExtensions" value="@ext" />
                        <label class="form-check-label" for="ext_@ext">@ext</label>
                    </div>
                </div>
            }
        </div>
    </div>


    <button type="submit" class="btn btn-primary">Scrape Repositories</button>
</form>

<div id="result" class="mt-3"></div>

@section Scripts {
    <script>
        // Select/Deselect all checkboxes
        document.getElementById('selectAll').addEventListener('click', function () {
            var checkboxes = document.querySelectorAll('input[name="fileExtensions"]');
            var allChecked = Array.from(checkboxes).every(checkbox => checkbox.checked);

            // Toggle checkboxes: check/uncheck based on the current state
            checkboxes.forEach(checkbox => checkbox.checked = !allChecked);
        });
        $(document).ready(function () {
            $('#scrapeForm').on('submit', function (e) {
                e.preventDefault();

                var owner = $('#owner').val();
                var repoName = $('#repoName').val();
                var fileExtensions = [];

                // Collect selected file extensions
                $('input[name="fileExtensions"]:checked').each(function () {
                    fileExtensions.push($(this).val());
                });

                // Make AJAX call
                $.ajax({
                    url: '@Url.Action("ExtractRepositories", "Github")',
                    method: 'POST',
                    data: {
                        owner: owner,
                        repoName: repoName,
                        fileExtensions: fileExtensions
                    },
                    success: function (response) {
                        $('#result').html('<pre>' + JSON.stringify(response, null, 2) + '</pre>');
                    },
                    error: function (error) {
                        $('#result').html('<p class="text-danger">An error occurred while processing your request.</p>');
                    }
                });
            });
        });
    </script>
}
